//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:\KU\Documents\Docxes_Txts_Pdfs\compilation\CppFuncDef\CppFuncDef\CppFuncDef.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace CppFuncDef {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class CppFuncDefLexer : Lexer {
	public const int
		WS=1, ANDTOKEN=2, ORTOKEN=3, EQUALTOKEN=4, LESSEQUAL=5, MOREEQUAL=6, NEGEQUAL=7, 
		ADDASSIGN=8, SUBASSIGN=9, MULASSIGN=10, DIVASSIGN=11, NEGTOKEN=12, PLUSTOKEN=13, 
		SUBTOKEN=14, DIVTOKEN=15, ASSIGNTOKEN=16, LESSTOKEN=17, MORETOKEN=18, 
		STAR=19, SEMICOLON=20, COMMA=21, ANDSINGLE=22, ORSINGLE=23, LEFTBRACKET=24, 
		RIGHTBRACKET=25, LEFTPAREN=26, RIGHTPAREN=27, CH=28, STR=29, WHILETOKEN=30, 
		FORTOKEN=31, RETURNTOKEN=32, VOIDTOKEN=33, BREAKTOKEN=34, CONTINUETOKEN=35, 
		DATATYPE=36, ID=37, CALLINGCONV=38, FIG=39;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"WS", "'&&'", "'||'", "'=='", "'<='", "'>='", "'!='", "'+='", "'-='", 
		"'*='", "'/='", "'!'", "'+'", "'-'", "'/'", "'='", "'<'", "'>'", "'*'", 
		"';'", "','", "'&'", "'|'", "'{'", "'}'", "'('", "')'", "CH", "STR", "'while'", 
		"'for'", "'return'", "'void'", "'break'", "'continue'", "DATATYPE", "ID", 
		"CALLINGCONV", "FIG"
	};
	public static readonly string[] ruleNames = {
		"WS", "ANDTOKEN", "ORTOKEN", "EQUALTOKEN", "LESSEQUAL", "MOREEQUAL", "NEGEQUAL", 
		"ADDASSIGN", "SUBASSIGN", "MULASSIGN", "DIVASSIGN", "NEGTOKEN", "PLUSTOKEN", 
		"SUBTOKEN", "DIVTOKEN", "ASSIGNTOKEN", "LESSTOKEN", "MORETOKEN", "STAR", 
		"SEMICOLON", "COMMA", "ANDSINGLE", "ORSINGLE", "LEFTBRACKET", "RIGHTBRACKET", 
		"LEFTPAREN", "RIGHTPAREN", "CH", "STR", "WHILETOKEN", "FORTOKEN", "RETURNTOKEN", 
		"VOIDTOKEN", "BREAKTOKEN", "CONTINUETOKEN", "DATATYPE", "ID", "CALLINGCONV", 
		"FIG"
	};


		protected const int EOF = Eof;
		protected const int HIDDEN = Hidden;


	public CppFuncDefLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "CppFuncDef.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2)\x11D\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x3\x2\x6\x2S"+
		"\n\x2\r\x2\xE\x2T\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x5"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\t\x3\t"+
		"\x3\t\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3"+
		"\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18"+
		"\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1D\x3\x1E\x3\x1E\a\x1E\x9D\n\x1E\f\x1E\xE\x1E\xA0\v\x1E\x3"+
		"\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 "+
		"\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3#"+
		"\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3%\x3%\x3%\x3%\x3%\x3%\x3"+
		"%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%"+
		"\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x5%\xEF\n%\x3"+
		"&\x5&\xF2\n&\x3&\a&\xF5\n&\f&\xE&\xF8\v&\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'"+
		"\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'"+
		"\x3\'\x5\'\x10F\n\'\x3(\x6(\x112\n(\r(\xE(\x113\x3(\x3(\x6(\x118\n(\r"+
		"(\xE(\x119\x5(\x11C\n(\x2\x2\x2)\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2"+
		"\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2"+
		"\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2"+
		"\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2"+
		"\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O"+
		"\x2)\x3\x2\x6\x5\x2\v\f\xF\xF\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;"+
		"\x43\\\x61\x61\x63|\x3\x2\x32;\x12B\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2"+
		"\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2"+
		"\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2"+
		"\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3"+
		"\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2"+
		"\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2"+
		"\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2"+
		"\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2"+
		"\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2"+
		"\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2"+
		"\x2O\x3\x2\x2\x2\x3R\x3\x2\x2\x2\x5X\x3\x2\x2\x2\a[\x3\x2\x2\x2\t^\x3"+
		"\x2\x2\x2\v\x61\x3\x2\x2\x2\r\x64\x3\x2\x2\x2\xFg\x3\x2\x2\x2\x11j\x3"+
		"\x2\x2\x2\x13m\x3\x2\x2\x2\x15p\x3\x2\x2\x2\x17s\x3\x2\x2\x2\x19v\x3\x2"+
		"\x2\x2\x1Bx\x3\x2\x2\x2\x1Dz\x3\x2\x2\x2\x1F|\x3\x2\x2\x2!~\x3\x2\x2\x2"+
		"#\x80\x3\x2\x2\x2%\x82\x3\x2\x2\x2\'\x84\x3\x2\x2\x2)\x86\x3\x2\x2\x2"+
		"+\x88\x3\x2\x2\x2-\x8A\x3\x2\x2\x2/\x8C\x3\x2\x2\x2\x31\x8E\x3\x2\x2\x2"+
		"\x33\x90\x3\x2\x2\x2\x35\x92\x3\x2\x2\x2\x37\x94\x3\x2\x2\x2\x39\x96\x3"+
		"\x2\x2\x2;\x9A\x3\x2\x2\x2=\xA3\x3\x2\x2\x2?\xA9\x3\x2\x2\x2\x41\xAD\x3"+
		"\x2\x2\x2\x43\xB4\x3\x2\x2\x2\x45\xB9\x3\x2\x2\x2G\xBF\x3\x2\x2\x2I\xEE"+
		"\x3\x2\x2\x2K\xF1\x3\x2\x2\x2M\xF9\x3\x2\x2\x2O\x111\x3\x2\x2\x2QS\t\x2"+
		"\x2\x2RQ\x3\x2\x2\x2ST\x3\x2\x2\x2TR\x3\x2\x2\x2TU\x3\x2\x2\x2UV\x3\x2"+
		"\x2\x2VW\b\x2\x2\x2W\x4\x3\x2\x2\x2XY\a(\x2\x2YZ\a(\x2\x2Z\x6\x3\x2\x2"+
		"\x2[\\\a~\x2\x2\\]\a~\x2\x2]\b\x3\x2\x2\x2^_\a?\x2\x2_`\a?\x2\x2`\n\x3"+
		"\x2\x2\x2\x61\x62\a>\x2\x2\x62\x63\a?\x2\x2\x63\f\x3\x2\x2\x2\x64\x65"+
		"\a@\x2\x2\x65\x66\a?\x2\x2\x66\xE\x3\x2\x2\x2gh\a#\x2\x2hi\a?\x2\x2i\x10"+
		"\x3\x2\x2\x2jk\a-\x2\x2kl\a?\x2\x2l\x12\x3\x2\x2\x2mn\a/\x2\x2no\a?\x2"+
		"\x2o\x14\x3\x2\x2\x2pq\a,\x2\x2qr\a?\x2\x2r\x16\x3\x2\x2\x2st\a\x31\x2"+
		"\x2tu\a?\x2\x2u\x18\x3\x2\x2\x2vw\a#\x2\x2w\x1A\x3\x2\x2\x2xy\a-\x2\x2"+
		"y\x1C\x3\x2\x2\x2z{\a/\x2\x2{\x1E\x3\x2\x2\x2|}\a\x31\x2\x2} \x3\x2\x2"+
		"\x2~\x7F\a?\x2\x2\x7F\"\x3\x2\x2\x2\x80\x81\a>\x2\x2\x81$\x3\x2\x2\x2"+
		"\x82\x83\a@\x2\x2\x83&\x3\x2\x2\x2\x84\x85\a,\x2\x2\x85(\x3\x2\x2\x2\x86"+
		"\x87\a=\x2\x2\x87*\x3\x2\x2\x2\x88\x89\a.\x2\x2\x89,\x3\x2\x2\x2\x8A\x8B"+
		"\a(\x2\x2\x8B.\x3\x2\x2\x2\x8C\x8D\a~\x2\x2\x8D\x30\x3\x2\x2\x2\x8E\x8F"+
		"\a}\x2\x2\x8F\x32\x3\x2\x2\x2\x90\x91\a\x7F\x2\x2\x91\x34\x3\x2\x2\x2"+
		"\x92\x93\a*\x2\x2\x93\x36\x3\x2\x2\x2\x94\x95\a+\x2\x2\x95\x38\x3\x2\x2"+
		"\x2\x96\x97\a)\x2\x2\x97\x98\v\x2\x2\x2\x98\x99\a)\x2\x2\x99:\x3\x2\x2"+
		"\x2\x9A\x9E\a$\x2\x2\x9B\x9D\v\x2\x2\x2\x9C\x9B\x3\x2\x2\x2\x9D\xA0\x3"+
		"\x2\x2\x2\x9E\x9C\x3\x2\x2\x2\x9E\x9F\x3\x2\x2\x2\x9F\xA1\x3\x2\x2\x2"+
		"\xA0\x9E\x3\x2\x2\x2\xA1\xA2\a$\x2\x2\xA2<\x3\x2\x2\x2\xA3\xA4\ay\x2\x2"+
		"\xA4\xA5\aj\x2\x2\xA5\xA6\ak\x2\x2\xA6\xA7\an\x2\x2\xA7\xA8\ag\x2\x2\xA8"+
		">\x3\x2\x2\x2\xA9\xAA\ah\x2\x2\xAA\xAB\aq\x2\x2\xAB\xAC\at\x2\x2\xAC@"+
		"\x3\x2\x2\x2\xAD\xAE\at\x2\x2\xAE\xAF\ag\x2\x2\xAF\xB0\av\x2\x2\xB0\xB1"+
		"\aw\x2\x2\xB1\xB2\at\x2\x2\xB2\xB3\ap\x2\x2\xB3\x42\x3\x2\x2\x2\xB4\xB5"+
		"\ax\x2\x2\xB5\xB6\aq\x2\x2\xB6\xB7\ak\x2\x2\xB7\xB8\a\x66\x2\x2\xB8\x44"+
		"\x3\x2\x2\x2\xB9\xBA\a\x64\x2\x2\xBA\xBB\at\x2\x2\xBB\xBC\ag\x2\x2\xBC"+
		"\xBD\a\x63\x2\x2\xBD\xBE\am\x2\x2\xBE\x46\x3\x2\x2\x2\xBF\xC0\a\x65\x2"+
		"\x2\xC0\xC1\aq\x2\x2\xC1\xC2\ap\x2\x2\xC2\xC3\av\x2\x2\xC3\xC4\ak\x2\x2"+
		"\xC4\xC5\ap\x2\x2\xC5\xC6\aw\x2\x2\xC6\xC7\ag\x2\x2\xC7H\x3\x2\x2\x2\xC8"+
		"\xC9\ak\x2\x2\xC9\xCA\ap\x2\x2\xCA\xEF\av\x2\x2\xCB\xCC\au\x2\x2\xCC\xCD"+
		"\aj\x2\x2\xCD\xCE\aq\x2\x2\xCE\xCF\at\x2\x2\xCF\xEF\av\x2\x2\xD0\xD1\a"+
		"n\x2\x2\xD1\xD2\aq\x2\x2\xD2\xD3\ap\x2\x2\xD3\xEF\ai\x2\x2\xD4\xD5\ah"+
		"\x2\x2\xD5\xD6\an\x2\x2\xD6\xD7\aq\x2\x2\xD7\xD8\a\x63\x2\x2\xD8\xEF\a"+
		"v\x2\x2\xD9\xDA\a\x66\x2\x2\xDA\xDB\aq\x2\x2\xDB\xDC\aw\x2\x2\xDC\xDD"+
		"\a\x64\x2\x2\xDD\xDE\an\x2\x2\xDE\xEF\ag\x2\x2\xDF\xE0\a\x65\x2\x2\xE0"+
		"\xE1\aj\x2\x2\xE1\xE2\a\x63\x2\x2\xE2\xEF\at\x2\x2\xE3\xE4\a\x64\x2\x2"+
		"\xE4\xE5\aq\x2\x2\xE5\xE6\aq\x2\x2\xE6\xEF\an\x2\x2\xE7\xE8\ay\x2\x2\xE8"+
		"\xE9\a\x65\x2\x2\xE9\xEA\aj\x2\x2\xEA\xEB\a\x63\x2\x2\xEB\xEC\at\x2\x2"+
		"\xEC\xED\a\x61\x2\x2\xED\xEF\av\x2\x2\xEE\xC8\x3\x2\x2\x2\xEE\xCB\x3\x2"+
		"\x2\x2\xEE\xD0\x3\x2\x2\x2\xEE\xD4\x3\x2\x2\x2\xEE\xD9\x3\x2\x2\x2\xEE"+
		"\xDF\x3\x2\x2\x2\xEE\xE3\x3\x2\x2\x2\xEE\xE7\x3\x2\x2\x2\xEFJ\x3\x2\x2"+
		"\x2\xF0\xF2\t\x3\x2\x2\xF1\xF0\x3\x2\x2\x2\xF2\xF6\x3\x2\x2\x2\xF3\xF5"+
		"\t\x4\x2\x2\xF4\xF3\x3\x2\x2\x2\xF5\xF8\x3\x2\x2\x2\xF6\xF4\x3\x2\x2\x2"+
		"\xF6\xF7\x3\x2\x2\x2\xF7L\x3\x2\x2\x2\xF8\xF6\x3\x2\x2\x2\xF9\x10E\a\x61"+
		"\x2\x2\xFA\xFB\au\x2\x2\xFB\xFC\av\x2\x2\xFC\xFD\a\x66\x2\x2\xFD\xFE\a"+
		"\x65\x2\x2\xFE\xFF\a\x63\x2\x2\xFF\x100\an\x2\x2\x100\x10F\an\x2\x2\x101"+
		"\x102\a\x65\x2\x2\x102\x103\a\x66\x2\x2\x103\x104\ag\x2\x2\x104\x105\a"+
		"\x65\x2\x2\x105\x10F\an\x2\x2\x106\x107\ah\x2\x2\x107\x108\a\x63\x2\x2"+
		"\x108\x109\au\x2\x2\x109\x10A\av\x2\x2\x10A\x10B\a\x65\x2\x2\x10B\x10C"+
		"\a\x63\x2\x2\x10C\x10D\an\x2\x2\x10D\x10F\an\x2\x2\x10E\xFA\x3\x2\x2\x2"+
		"\x10E\x101\x3\x2\x2\x2\x10E\x106\x3\x2\x2\x2\x10FN\x3\x2\x2\x2\x110\x112"+
		"\t\x5\x2\x2\x111\x110\x3\x2\x2\x2\x112\x113\x3\x2\x2\x2\x113\x111\x3\x2"+
		"\x2\x2\x113\x114\x3\x2\x2\x2\x114\x11B\x3\x2\x2\x2\x115\x117\a\x30\x2"+
		"\x2\x116\x118\t\x5\x2\x2\x117\x116\x3\x2\x2\x2\x118\x119\x3\x2\x2\x2\x119"+
		"\x117\x3\x2\x2\x2\x119\x11A\x3\x2\x2\x2\x11A\x11C\x3\x2\x2\x2\x11B\x115"+
		"\x3\x2\x2\x2\x11B\x11C\x3\x2\x2\x2\x11CP\x3\x2\x2\x2\r\x2T\x9E\xEE\xF1"+
		"\xF4\xF6\x10E\x113\x119\x11B\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace CppFuncDef
